// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc HTTP client CLI support package
//
// Command:
// $ goa gen github.com/sm43/calc/v2/design

package client

import (
	"fmt"
	"strconv"

	calc "github.com/sm43/calc/v2/gen/calc"
)

// BuildV2AddPayload builds the payload for the calc v2Add endpoint from CLI
// flags.
func BuildV2AddPayload(calcV2AddA string, calcV2AddB string) (*calc.V2AddPayload, error) {
	var err error
	var a int
	{
		var v int64
		v, err = strconv.ParseInt(calcV2AddA, 10, 64)
		a = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for a, must be INT")
		}
	}
	var b int
	{
		var v int64
		v, err = strconv.ParseInt(calcV2AddB, 10, 64)
		b = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for b, must be INT")
		}
	}
	v := &calc.V2AddPayload{}
	v.A = a
	v.B = b

	return v, nil
}
