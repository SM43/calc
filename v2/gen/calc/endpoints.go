// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc endpoints
//
// Command:
// $ goa gen github.com/sm43/calc/v2/design

package calc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "calc" service endpoints.
type Endpoints struct {
	V2Add goa.Endpoint
}

// NewEndpoints wraps the methods of the "calc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		V2Add: NewV2AddEndpoint(s),
	}
}

// Use applies the given middleware to all the "calc" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.V2Add = m(e.V2Add)
}

// NewV2AddEndpoint returns an endpoint function that calls the method "v2Add"
// of service "calc".
func NewV2AddEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*V2AddPayload)
		return s.V2Add(ctx, p)
	}
}
